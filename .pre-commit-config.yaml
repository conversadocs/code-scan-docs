repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: check-merge-conflict
        name: Check for merge conflicts
        stages: [pre-commit]

      - id: trailing-whitespace
        name: Remove trailing whitespace
        stages: [pre-commit]

      - id: end-of-file-fixer
        name: Fix end of files
        stages: [pre-commit]

      - id: check-yaml
        name: Check YAML syntax
        stages: [pre-commit]

      - id: check-toml
        name: Check TOML syntax
        stages: [pre-commit]

  - repo: local
    hooks:
      # Compilation check - fast way to catch errors
      - id: cargo-check
        name: Cargo check (compilation)
        entry: cargo check --all-targets --all-features
        language: system
        types: [rust]
        pass_filenames: false
        stages: [pre-commit]

      # Auto-format code (this FIXES issues, doesn't just check)
      - id: cargo-fmt
        name: Cargo format (auto-fix)
        entry: cargo fmt --all
        language: system
        types: [rust]
        pass_filenames: false
        stages: [pre-commit]

      # Linting - catches bugs and style issues
      - id: cargo-clippy
        name: Cargo clippy (linting)
        entry: cargo clippy --all-targets --all-features -- -D warnings
        language: system
        types: [rust]
        pass_filenames: false
        stages: [pre-commit]

      # Run tests locally
      - id: cargo-test
        name: Cargo test (unit tests)
        entry: cargo test --lib
        language: system
        types: [rust]
        pass_filenames: false
        stages: [pre-commit]

      # Python code formatting (auto-fix)
      - id: python-black
        name: Python format (black auto-fix)
        entry: black
        language: system
        types: [python]
        args: [--line-length=88]
        stages: [pre-commit]

      # Python linting - catches bugs and style issues
      - id: python-flake8
        name: Python linting (flake8)
        entry: flake8
        language: system
        types: [python]
        args:
          - --max-line-length=88
          - '--extend-ignore=E203,W503,E402'
        stages: [pre-commit]

      # Python type checking
      - id: python-mypy
        name: Python type checking (mypy)
        entry: mypy
        language: system
        types: [python]
        args: [--ignore-missing-imports, --no-strict-optional]
        stages: [pre-commit]

      # Python plugin tests
      - id: python-tests
        name: Python plugin tests
        entry: pytest tests/python/ -v --tb=short
        language: system
        types: [python]
        pass_filenames: false
        stages: [pre-commit]
        always_run: true

  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.25.0
    hooks:
      - id: commitizen
        name: Commit message format
        stages: [commit-msg]
